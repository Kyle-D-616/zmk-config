/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R       &kp T           &kp Y          &kp U      &kp I      &kp O    &kp P     &kp RIGHT_ALT
&kp LCTRL       &kp A  &kp S  &kp D  &kp F       &kp G           &kp H          &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V       &kp B           &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &mo 2  &kp RETURN  &kp LEFT_WIN    &kp BACKSPACE  &kp SPACE  &mo 1
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&bt BT_CLR        &kp N1        &kp N2          &kp N3        &kp N4        &kp N5           &kp N6         &kp N7     &kp N8  &kp N9     &kp N0  &kp RIGHT_ALT
&kp LEFT_CONTROL  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_DISC 1    &kp LEFT       &kp DOWN   &kp UP  &kp RIGHT  &trans  &kp C_VOLUME_UP
&kp LSHFT         &caps_word    &kp C_PREVIOUS  &kp C_PAUSE   &kp C_PLAY    &kp C_NEXT       &trans         &trans     &trans  &trans     &trans  &kp C_VOL_DN
                                                &mo 2         &kp RETURN    &kp LEFT_WIN     &kp BACKSPACE  &kp SPACE  &mo 1
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET      &kp AMPS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ASTERISK      &kp DELETE
&kp LCTRL  &kp F1    &kp F2  &kp F3    &kp HOME  &kp END         &kp MINUS      &kp EQUAL  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN     &kp BACKSLASH
&kp LSHFT  &trans    &trans  &trans    &trans    &kp LEFT_ALT    &kp UNDER      &kp PLUS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN  &kp PIPE
                             &mo 2     &kp RET   &kp LEFT_WIN    &kp BACKSPACE  &kp SPACE  &mo 1
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
